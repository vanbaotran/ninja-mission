{"version":3,"sources":["components/NavBar.js","components/Homepage.js","components/service.js","components/backgrounds/BlueTop.js","components/Login.js","components/backgrounds/RedTop.js","components/Signup.js","components/inputs/SelectInput.js","components/inputs/TextInput.js","components/overlays/OverlayUpdated.js","components/forms/PostForm.js","components/forms/RecruiterForm.js","components/forms/CandidateForm.js","components/backgrounds/RedBottom.js","components/ProfilePage.js","components/overlays/OverlayWeapon.js","components/swipe/InfoIco.js","components/SwipeJobPost.js","components/details/PostDetails.js","components/Logout.js","components/LevelPage.js","components/details/CandidateDetails.js","components/overlays/OverlayExperience.js","components/SwipeCandidateProfile.js","components/MyOffersList.js","components/MyDashboard.js","components/DashboardDetails.js","components/details/CompanyDetails.js","components/Rating.js","components/MyBadges.js","components/overlays/OverlayOptions.js","components/MyApplications.js","components/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","to","Homepage","className","src","alt","React","Component","service","axios","create","baseURL","process","REACT_APP_APIURL","withCredentials","login","email","password","post","then","response","data","signup","name","profileType","editProfile","user","patch","logout","dataPostToStatePost","id","get","offerName","companyLogo","companyBio","companyName","description","position","contract","experienceLevel","codeLanguage","remote","funFact","website","errorHandler","err","uploadFile","uploadData","res","catch","BlueTop","Login","state","handleSubmit","event","preventDefault","setState","props","updateUser","console","log","currentUser","history","push","handleChange","target","value","onSubmit","this","type","onChange","e","RedTop","Signup","updateProfileType","error","onClick","SelectInput","changeMultiple","arrMultiple","key","options","Object","hasOwnProperty","call","element","selected","change","label","multiple","map","option","idx","TextInput","area","rows","cols","OverlayUpdated","LanguageOptions","ContractOptions","LevelOptions","PostForm","location","city","country","popUp","errorMessage","handleCheckbox","handleLogo","FormData","append","files","secure_url","handleChangeMultiple","length","match","params","updateCurrentPost","newPost","_id","currentPostId","setTimeout","componentDidMount","accept","checked","RecruiterForm","bio","companyWebsite","industry","scope","updatedUser","CandidateForm","birthday","avatar","cvUrl","title","level","usefulLinks","linkedin","github","portfolio","empty","valid","validateEmail","inputText","handleChangeUsefulLink","updatedLinks","handleChangeFile","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","formatDate","RedBottom","ProfilePage","currentPost","getAge","dateString","today","birthDate","age","m","OverlayWeapon","chooseFilter","filterDataSwipeParent","filter","rememberOptions","toggleFilter","copyChoose","includes","splice","indexOf","currentOptions","Warrior","Ninja","Samurai","Sensei","InfoIco","image","toLowerCase","blueText","redText","setgoogState","prevProps","SwipeJobPost","optionsIsOpen","offer","remember","openFilter","setCurrentoptions","arrOptionsSelected","searchRandom","url","resp","status","statusText","newRandom","a","detailPost","swipeOffer","idOffer","copyRemember","chooseOffer","idApp","applicationId","comeBack","beforeVal","pop","split","action","oldId","copyCurrentUser","copySwippedOffer","swipedOfferId","oldOffer","oldApp","application","jobPostId","compagnyLogo","recruiterId","PostDetails","from","handleEdit","back","goBack","href","rel","Logout","LevelPage","updateLevel","str","CandidateDetails","apply","swipeCandidate","currentApplicationId","currentCandidate","chooseCandidate","openChat","updateCandidate","acceptedCandidateId","refusedCandidateId","OverlayExperience","SwipeCandidateProfile","candidate","MyOffersList","offerList","goToDetails","postId","style","backgroundColor","MyDashBoard","dateFromDB","theDay","difference","getTime","Math","floor","dateNumber","createdAt","candidateId","DashboardDetails","jobPost","candidateList","query","jobCodeLanguages","sortingLevel","sortingAccuracy","sortByLevel","ranking","sortedList","sort","b","getSinglePost","sortByAccuracy","matchCount","candidateCodeLanguagesArray","el","candidatesData","candidateArray","divStyle1","divStyle2","some","startsWith","buttonOn","boxShadow","CompanyDetails","goToEdit","Rating","rating","round","children","stars","i","MyBadges","motivation","humour","skills","culture","for","class","OverlayOptions","MyApplications","applicationList","arrCandidating","Chat","roomId","message","messages","socket","io","autoConnect","sendMyMessage","prefix_message","emit","arrIds","recruiter","updateRecruiter","room","connect","on","newMessages","newRoom","disconnect","nametype","mess","arrMess","currentRecruiter","App","loggedInUser","updateCurrentPostId","objCandidate","objRecruiter","updateLoggedInUser","userObj","fetchUser","prevState","exact","path","component","render","fromswipe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.30f4ae42.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nconst NavBar = () =>{\n  return (\n    <div>\n      {/* <Link to='/login'>Log in </Link>\n      <Link to='/signup'>Sign up </Link> */}\n      <Link to='/postform/new'>Create a Job post </Link>\n      <Link to='/editCandidateform'>Edit my Candidate profile </Link>\n      <Link to='/profilepage'>Candidate profile </Link>\n      <Link to='/swipeOffer/random'>Swipe Offer </Link>\n      <Link to='/logout'>Log Out </Link>\n      <Link to='/levelspage'>MY LEVEL </Link>\n       <Link to='/intest'> test </Link>\n      <Link to='/swipeCandidate/random'>SWIPE CANDIDATE </Link>\n      <Link to='/myoffers'>  My offers </Link>\n      <Link to='/mydashboard'>  My dashboard </Link>\n      <Link to='/companyDetails'>  My COMPANY DETAILS </Link>\n      <Link to='/recruiterform'>  My COMPANY details EDIT </Link>\n      <Link to='/myBadges'>  MY BADGES </Link>\n      <Link to='/options'> OverlayOptions </Link>\n      <Link to='/overlayupdated'> OverlayUpdated </Link>\n      <Link to='/chatbox/610a92d5152f7035a580ff38_610a92d5152f7035a580ff64_610a92d5152f7035a580ffa1'> Chatbox </Link>\n      <Link to='/chatbox/hihi'> Chatbox2 </Link>\n      \n      \n    </div>\n  )\n}\nexport default NavBar","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nclass Homepage extends React.Component {\n  render() {\n    return (\n      <div className=\"sub-app\">\n        <NavBar />\n        <section className=\"landPage\">\n          <div className=\"sub-landPage\">\n            <img className=\"logo\" src=\"/images/ninja-logo.png\" alt=\"logo\" />\n          </div>\n          <div className=\"btns\">\n            <Link to=\"/login\">\n              <button className=\"btn blue\">LOG IN</button>\n            </Link>\n            <Link to=\"/signup\">\n              <button className=\"btn red\">SIGN UP</button>\n            </Link>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\nexport default Homepage;\n","import axios from 'axios';\n \nconst service = axios.create({\n  baseURL: `${process.env.REACT_APP_APIURL || \"\" }`,\n  withCredentials: true\n});\nexport default service;\n\nfunction login(email, password) {\n  return service.post('/users/login', {email, password}).then(response => response.data)\n}\nexport {login}\n \n\nfunction signup(name, email, password, profileType) {\n  return service.post('/users/signup', {name, email, password, profileType}).then(response => response.data)\n}\nexport {signup}\n \nfunction editProfile(user){\n  return service.patch('/users',{...user}).then(response => response.data)\n}\nexport {editProfile}\n\nfunction loggedIn(){\n  return service.get('/users/loggedin').then(response => response.data)\n}\nexport {loggedIn}\n\nfunction logout(){\n  return service.post('/users/logout').then(response => response.data)\n}\nexport {logout}\n\nfunction getUserData(id){\n  return service.get(`/users/${id}`).then(response => response.data)\n}\nexport {getUserData}\n\nfunction getPostData(id){\n  return service.get(`/posts/${id}`).then(response => response.data)\n}\nexport {getPostData}\n\n// function getOfferList(recruiterId){\n//   return service.get(`/posts/recruiter/${recruiterId}`).then(response => response.data)\n// }\n// export {getOfferList}\n\nfunction dataPostToStatePost(id) {\n  return service.get(`/posts/${id}`).then(response => {\n    let {\n      offerName,\n      companyLogo,\n      companyBio,\n      companyName,\n      description,\n      position,\n      contract,\n      experienceLevel,\n      codeLanguage,\n      remote,\n      funFact,\n      website,\n    } = response.data;\n    return {\n      offerName,\n      companyLogo,\n      companyBio,\n      companyName,\n      description,\n      position,\n      contract,\n      experienceLevel,\n      codeLanguage,\n      remote,\n      funFact,\n      website,\n    };\n  })\n}\nexport {dataPostToStatePost}\n//// UPLOAD\nconst errorHandler = err => {\n  // console.error(err);\n  throw err;\n};\n\n/* Process to do in form to upload file on cloudinary by the api*/\n/*\nhandleFileUpload = e => {\n    const uploadData = new FormData();\n    uploadData.append('imageUrl', e.target.files[0]);\n    uploadFile(uploadData)\n      .then(response => {\n        this.setState({ imageUrl: response.secure_url });\n      })\n      .catch(err => {\n        console.log('Error while uploading the file: ', err);\n      });\n*/\nfunction uploadFile(uploadData) { /// FormData key of the file must be imageUrl and response data key is secure_url\n  return service\n      .post('/upload', uploadData)\n      .then(res => res.data)\n      .catch(errorHandler);\n}\nexport { uploadFile };\n////////////////////////////////////////////////","import React from 'react'\n\nconst BlueTop = () =>  {\n  \n    return (\n      <div className=\"bg-bluetop\">\n        \n      </div>\n    )\n  \n}\n\nexport default BlueTop\n","import React from 'react';\nimport {login} from './service';\nimport BlueTop from \"./backgrounds/BlueTop\";\n\nclass Login extends React.Component{\n  state = {\n    email:'',\n    password:'', \n  }\n  handleSubmit = (event) =>{\n    event.preventDefault();\n    const {email,password} = this.state\n    login(email,password)\n    .then(response=>{\n      this.setState({ email: \"\", password: \"\" });\n      this.props.updateUser(response)\n      console.log(this.props.currentUser)\n      if (response.profileType===\"recruiter\") {\n        this.props.history.push('/swipeCandidate/random')\n      } else {\n        this.props.history.push('/swipeOffer/random')\n      }\n    })\n    .catch(err=>console.log(err))\n  }\n  handleChange = (event) =>{\n    const {name, value}=event.target\n    this.setState({[name]:value})\n  }\n  render(){\n    return (\n      <div className=\"block-login\">\n      <BlueTop/>\n       <form onSubmit={this.handleSubmit}>\n       <div className=\"form-no-btn\">\n      <h1 className='text-blue'>WELCOME BACK!</h1>\n            <label>Email\n             <input type='text' name='email' value={this.state.email} onChange={(e)=>this.handleChange(e)} /> \n            </label>\n            <label>Password\n             <input type='password' name='password' value={this.state.password} onChange={(e)=>this.handleChange(e)} />\n            </label>\n            {/* {!this.props.currentUser && <p className='text-red'>{this.state.errorMessage}</p>} */}\n           </div>\n            <button className='btn red'>LOG IN</button>\n          </form>\n          <img className='logo-footer' src='/images/ninja-logo.png' alt='logo'/>\n      </div>\n    )\n  }\n}\nexport default Login","import React from 'react'\n\nconst RedTop = () =>  {\n  \n    return (\n      <div className=\"bg-redtop\">\n        \n      </div>\n    )\n  \n}\n\nexport default RedTop\n","import React from \"react\";\nimport { signup } from \"./service\";\nimport RedTop from \"./backgrounds/RedTop\";\nclass Signup extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    profileType: \"\",\n  };\n  updateProfileType = (profileType) => {\n    this.setState({\n      profileType: profileType,\n    });\n  };\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, email, password, profileType } = this.state;\n    signup(name, email, password, profileType)\n      .then((response) => {\n        if (response.profileType === \"recruiter\") {\n          this.props.history.push(\"/recruiterform\");\n        } else if (response.profileType === \"candidate\") {\n          this.props.history.push(\"/editCandidateform\");\n        }\n        console.log(response);\n        this.setState({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          profileType: \"\",\n        });\n        this.props.updateUser(response);\n      })\n      .catch((error) => console.log(error));\n  };\n  render() {\n    if (this.state.profileType === \"\") {\n      return (\n        <div>\n          <div className=\"signup\">\n            <div className=\"sub-signup flex-column\">\n              <h2>You are here to...</h2>\n              <div className=\"flex-row\">\n                <div onClick={() => this.updateProfileType(\"recruiter\")}>\n                  <img src=\"/images/temple.png\" alt=\"temple\" />\n                  <h4 className=\"text-blue\">HIRE A NINJA</h4>\n                </div>\n                <div onClick={() => this.updateProfileType(\"candidate\")}>\n                  <img src=\"/images/ninja.png\" alt=\"ninja\" />\n                  <h4 className=\"text-red\">FIND YOUR MISSION</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n          <img className=\"logo-footer\" src=\"/images/ninja-logo.png\" alt=\"logo\" />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"signup-form\">\n          <RedTop />\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-no-btn\">\n              <h1 className=\"text-blue\">LET'S SIGN UP</h1>\n              <label>\n                Name\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </label>\n              <label>\n                Email\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </label>\n              <label>\n                Password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={(e) => this.handleChange(e)}\n                />\n              </label>\n            </div>\n            <button className=\"btn blue\">DISCOVER THE NINJA WORLD</button>\n          </form>\n          <img className=\"logo-footer\" src=\"/images/ninja-logo.png\" alt=\"logo\" />\n        </div>\n      );\n    }\n  }\n}\nexport default Signup;\n","import React, { Component } from \"react\";\n\nclass SelectInput extends Component {\n  changeMultiple = (e) => {\n    console.log(e);\n    let arrMultiple = [];\n    for (const key in e.target.options) {\n      if (Object.hasOwnProperty.call(e.target.options, key)) {\n        const element = e.target.options[key];\n        if (element.selected) {\n          arrMultiple.push(element.value);\n        }\n      }\n    }\n    this.props.change(e.target.name, arrMultiple);\n  };\n\n  render() {\n    return (\n      <label>\n        {this.props.label}\n        <select\n          multiple={this.props.multiple ? true : false}\n          name={this.props.name}\n          value={this.props.multiple ? [...this.props.value] : this.props.value}\n          onChange={(e) => {\n            if (this.props.multiple) {\n              this.changeMultiple(e);\n            } else {\n              this.props.change(e);\n            }\n          }}\n        >\n          <option value=\"none\">Choose {this.props.multiple ? \"options\" : \"option\"}</option>\n          {this.props.options.map((option, idx) => {\n            return (\n              <option key={idx} value={option} >\n                {option}\n              </option>\n            );\n          })}\n        </select>\n      </label>\n    );\n  }\n}\n\nexport default SelectInput;\n","import React, { Component } from \"react\";\n\nclass TextInput extends Component {\n  render() {\n    return (\n      <label className={this.props.className ?  this.props.className : \"\"}>\n        {this.props.label}\n        {this.props.area ? (\n          <textarea\n            name={this.props.name}\n            value={this.props.value}\n            onChange={this.props.change}\n            rows={this.props.rows ? this.props.rows : 5}\n            cols={this.props.cols ? this.props.cols : 25}\n          />\n        ) : (\n          <input\n            type=\"text\"\n            name={this.props.name}\n            value={this.props.value}\n            onChange={this.props.change}\n          />\n        )}\n      </label>\n    );\n  }\n}\n\nexport default TextInput;\n","import React from 'react';\nconst OverlayUpdated = () => {\n  return (\n    <div className='overlay'>\n    <img src='/images/validation.png' alt='match'/>\n    <h1>CHANGES SUCCESSFULLY SAVED !!!</h1>\n    </div>\n  )\n}\nexport default OverlayUpdated","import React, { Component } from \"react\";\nimport service, { uploadFile } from \"../service\";\nimport SelectInput from \"../inputs/SelectInput\";\nimport TextInput from \"../inputs/TextInput\";\nimport { dataPostToStatePost, editProfile } from \"../service\";\nimport OverlayUpdated from '../overlays/OverlayUpdated'\nconst LanguageOptions = [\n  \"PHP\",\n  \"JS\",\n  \"Python\",\n  \"Ruby\",\n  \"HTML\",\n  \"CSS\",\n  \"C++\",\n  \"C\",\n  \"Rust\",\n];\nconst ContractOptions = [\"Internship\", \"Freelance\", \"Permanent\", \"Temporary\"];\nconst LevelOptions = [\"Warrior\", \"Ninja\", \"Samurai\", \"Sensei\"];\nexport class PostForm extends Component {\n  state = {\n    offerName: \"\",\n    companyLogo: \"\",\n    companyBio: \"\",\n    companyName: \"\",\n    description: \"\", /// verif 500 char\n    position: \"\",\n    contract: \"\", //  enum: [\"Internship\", \"Freelance\", \"Permanent\", \"Temporary\"],\n    experienceLevel: \"\", // enum: [\"Warrior\", \"Ninja\", \"Samurai\", \"Sensei\"],\n    codeLanguage: [], // voir si enum et ou vérification bonne donnée\n    location: { city: [], country: [] },\n    remote: false,\n    funFact: \"\", //maxlength: 250,\n    website: \"\",\n    popUp: false,\n    errorMessage: false,\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleCheckbox = (e) => {\n    this.setState({\n      [e.target.name]: !this.state.remote,\n    });\n  };\n  handleLogo = (e) => {\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    uploadFile(uploadData)\n      .then((response) => {\n        this.setState({ companyLogo: response.secure_url });\n      })\n      .catch((err) => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n  handleChangeMultiple = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { contract, experienceLevel, codeLanguage } = this.state;\n    if (!contract || !experienceLevel || codeLanguage.length === 0) {\n      this.setState({\n        errorMessage: \"Contract, level and code languages are required!\",\n      });\n      setTimeout(() => this.setState({ errorMessage: false }), 2000);\n    } else {\n      if (this.props.match.params.id === \"new\") {\n        service\n          .post(\"/posts\", { ...this.state })\n          .then((response) => {\n            // console.log(\"in submi\", response)\n            this.props.updateCurrentPost(response.data.newPost._id);\n            editProfile({ currentPostId: response.data.newPost._id }).then(\n              (response) => {\n                this.props.updateUser(response);\n                this.setState({popUp:true})\n                setTimeout(() => {\n                  this.setState({popUp:false})\n                  this.props.history.push(`/posts/${response.data.newPost._id}`);\n                }, 2000);\n              }\n            );\n          \n          })\n          .catch((err) => console.log(err));\n      } else {\n        service\n          .patch(`/posts/${this.props.match.params.id}`, { ...this.state })\n          .then((response) => {\n             this.setState({popUp:true})\n                setTimeout(() => {\n                  this.setState({popUp:false})\n                  this.props.history.push(`/posts/${this.props.match.params.id}`);\n                }, 2000);\n          });\n      }\n      this.setState({\n        offerName: \"\",\n        companyLogo: \"\",\n        companyBio: \"\",\n        companyName: \"\",\n        description: \"\", /// verif 500 char\n        position: \"\",\n        contract: \"\", //  enum: [\"Internship\", \"Freelance\", \"Permanent\", \"Temporary\"],\n        experienceLevel: \"\", // enum: [\"Warrior\", \"Ninja\", \"Samurai\", \"Sensei\"],\n        codeLanguage: [], // voir si enum et ou vérification bonne donnée\n        location: { city: [], country: [] },\n        remote: false,\n        funFact: \"\", //maxlength: 250,\n        website: \"\",\n      });\n    }\n  };\n  componentDidMount = () => {\n    if (!(this.props.match.params.id === \"new\")) {\n      dataPostToStatePost(this.props.match.params.id)\n        .then((data) => {\n          this.setState({ ...data });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  render() {\n    return (\n      <div className=\"post-form-main bg-ligth-grey flex-column\">\n        {this.state.errorMessage && (\n          <div className=\"overlay text-red error-over border-blue\">\n            <h3>{this.state.errorMessage}</h3>\n          </div>\n        )}\n        {this.state.popUp && <OverlayUpdated/>}\n        <h1>\n          {this.props.match.params.id === \"new\"\n            ? \"ADD A NEW OFFER\"\n            : \"EDIT THE OFFER\"}\n        </h1>\n        <form className=\"flex-column form-all-page\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div className='flex-row logo'>\n            <img \n              src={this.state.companyLogo || \"/images/temple.png\"}\n              alt=\"logo\"\n            />\n            <div className = 'upload-logo'> \n            <label>\n            <input\n              type=\"file\"\n              name=\"companyLogo\"\n              accept=\".png,.jpg,.jpeg\"\n              onChange={this.handleLogo}\n            />\n              <img src='/images/icons/edit.png' alt=''/>\n            </label>\n            </div>\n          </div>\n          <TextInput\n            label=\"Offer Name\"\n            name=\"offerName\"\n            value={this.state.offerName}\n            change={this.handleChange}\n          />\n          <TextInput\n            label=\"Company Name\"\n            name=\"companyName\"\n            value={this.state.position}\n            change={this.handleChange}\n          />\n          <SelectInput\n            label=\"Exp Level\"\n            name=\"experienceLevel\"\n            value={this.state.experienceLevel}\n            change={this.handleChange}\n            options={LevelOptions}\n            multiple={false}\n          />\n          <SelectInput\n            label=\"Contract\"\n            name=\"contract\"\n            value={this.state.contract}\n            change={this.handleChange}\n            options={ContractOptions}\n            multiple={false}\n          />\n\n          <label>\n            Remote\n            <input\n              name=\"remote\"\n              type=\"checkbox\"\n              checked={this.state.remote}\n              onChange={this.handleCheckbox}\n            />\n          </label>\n          <SelectInput\n            label=\"Languages\"\n            name=\"codeLanguage\"\n            value={[...this.state.codeLanguage]}\n            change={this.handleChangeMultiple}\n            options={LanguageOptions}\n            multiple={true}\n          />\n          <TextInput\n            label=\"Company Bio\"\n            name=\"companyBio\"\n            value={this.state.companyBio}\n            change={this.handleChange}\n            area={true}\n            rows={5}\n            cols={20}\n          />\n          <TextInput\n            label=\"Description\"\n            name=\"description\"\n            value={this.state.description}\n            change={this.handleChange}\n            area={true}\n            rows={10}\n            cols={20}\n          />\n          <TextInput\n            label=\"Fun fact\"\n            name=\"funFact\"\n            value={this.state.funFact}\n            change={this.handleChange}\n            area={true}\n            rows={3}\n            cols={20}\n          />\n          <TextInput\n            label=\"Website\"\n            name=\"website\"\n            value={this.state.website}\n            change={this.handleChange}\n          />\n          <button className=\"btn blue\">\n            {this.props.match.params.id === \"new\"\n              ? \"Add new post\"\n              : \"Edit the post\"}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n","import React from \"react\";\nimport TextInput from \"../inputs/TextInput\";\nimport service, { uploadFile } from \"../service\";\nimport BlueTop from \"../backgrounds/BlueTop\";\n\nclass RecruiterForm extends React.Component {\n  state = {\n    name: this.props.currentUser?.name || \"\",\n    email: this.props.currentUser?.email || \"\",\n    bio: this.props.currentUser?.bio || \"\",\n    companyName: this.props.currentUser?.companyName || \"\",\n    companyLogo: this.props.currentUser?.companyLogo || \"\",\n    companyWebsite: this.props.currentUser?.companyWebsite || \"\",\n    industry: this.props.currentUser?.industry || \"\",\n    scope: this.props.currentUser?.scope || \"\",\n    funFact: this.props.currentUser?.funFact || \"\"\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    service.patch(`/users`, { ...this.state }).then((response) => {\n      let updatedUser = response.data;\n      console.log(updatedUser)\n      this.setState({\n        name: updatedUser ? updatedUser.name : \"\",\n        email: updatedUser ? updatedUser.email : \"\",\n        bio: updatedUser ? updatedUser.bio : \"\",\n        companyName: updatedUser ? updatedUser.companyName : \"\",\n        companyLogo: updatedUser ? updatedUser.companyLogo : \"\",\n        companyWebsite: updatedUser ? updatedUser.companyWebsite : \"\",\n        industry: updatedUser ? updatedUser.industry : \"\",\n        scope: updatedUser?.scope || \"\",\n        funFact: updatedUser?.funFact || \"\"\n      });\n    this.props.updateUser(updatedUser)\n    this.props.history.push('/companyDetails')\n    });\n  };\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleLogo = (e) => {\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    uploadFile(uploadData)\n      .then((response) => {\n        this.setState({ companyLogo: response.secure_url });\n      })\n      .catch((err) => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n  componentDidMount() {\n    if (!this.props.currentUser) { this.props.history.push(\"/login\") } else {\n      service.get(`/users/${this.props.currentUser._id}`).then(response => {\n        this.setState({...response.data });\n      });  \n    }\n  }\n  render() {\n    return (\n      <div className=\"form\">\n      <BlueTop/>\n        <form onSubmit={this.handleSubmit}>\n        <div className=\"form-no-btn\">\n        <h1 className=\"text-blue\">Edit Your Company Profile</h1>\n          <div className='flex-row logo'>\n            <img \n              src={this.state.companyLogo || \"/images/temple.png\"}\n              alt=\"logo\"\n            />\n            <div className = 'upload-logo'> \n            <label>\n            <input\n              type=\"file\"\n              name=\"companyLogo\"\n              accept=\".png,.jpg,.jpeg\"\n              onChange={this.handleLogo}\n            />\n              <img src='/images/icons/edit.png' alt=''/>\n            </label>\n            </div>\n          </div>\n          <TextInput label=\"Name\" name=\"name\" value={this.state.name} change={this.handleChange} />\n          <TextInput\n            label=\"Email\"\n            name=\"email\"\n            value={this.state.email}\n            change={this.handleChange}\n          />\n          <TextInput\n            label=\"Company Name\"\n            name=\"companyName\"\n            value={this.state.companyName}\n            change={this.handleChange}\n          />\n          <TextInput\n            label=\"Website\"\n            name=\"companyWebsite\"\n            value={this.state.companyWebsite}\n            change={this.handleChange}\n          />\n          <TextInput\n            label=\"Company Bio\"\n            name=\"bio\"\n            value={this.state.bio}\n            change={this.handleChange}\n            area={true}\n            rows={5}\n            cols={20}\n          />\n          <TextInput\n            label=\"Industry\"\n            name=\"industry\"\n            value={this.state.industry}\n            change={this.handleChange}\n          />\n           {/* <TextInput\n            label=\"City\"\n            name=\"city\"\n            value={this.state.scope.city}\n            change={this.handleChange}\n          />  \n          <TextInput\n            label=\"Country\"\n            name=\"country\"\n            value={this.state.scope.country}\n            change={this.handleChange}\n          /> */}\n           <TextInput\n            label=\"Fun Fact\"\n            name=\"funFact\"\n            value={this.state.funFact}\n            change={this.handleChange}\n          />\n</div>\n          <button className='btn red'>SAVE THE CHANGES</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RecruiterForm;\n","import React from 'react'\nimport {uploadFile,editProfile} from '../service';\nimport BlueTop from '../backgrounds/BlueTop';\nimport SelectInput from \"../inputs/SelectInput\";\nimport TextInput from \"../inputs/TextInput\";\nimport service from '../service';\nimport OverlayUpdated from '../overlays/OverlayUpdated'\nconst LevelOptions = [\"Warrior\", \"Ninja\", \"Samurai\", \"Sensei\"];\nconst LanguageOptions = [\"PHP\", \"JS\", \"Python\", \"Ruby\", \"HTML\", \"CSS\", \"C++\", \"C\", \"Rust\"];\n\n\n// import axios from 'axios';\n\nclass CandidateForm extends React.Component{\n  state = {\n    name:this.props.currentUser?.name || \"\",\n    email:this.props.currentUser?.email || \"\", \n    birthday:this.props.currentUser?.birthday || \"\",\n    bio:this.props.currentUser?.bio ||\"\",\n    avatar:this.props.currentUser?.avatar || \"\", \n    cvUrl:this.props.currentUser?.cvUrl || \"\", \n    title:this.props.currentUser?.title|| \"\", \n    codeLanguage:this.props.currentUser?.codeLanguage|| \"\", \n    funFact:this.props.currentUser?.funFact|| \"\",\n    level:this.props.currentUser?.level|| \"\",\n    usefulLinks:{\n      linkedin: this.props.currentUser?.usefulLinks?.linkedin || \"\",\n      github: this.props.currentUser?.usefulLinks?.github || \"\",\n      portfolio: this.props.currentUser?.usefulLinks?.portfolio|| \"\" ,\n    },\n    errorMessage:{\n      empty:'This input cannot be empty!',\n      valid:'This input needs to be valid!',\n      level:'Please choose your level!'\n    },\n    popUp: false,\n  }\n  componentDidMount() {\n     if (!this.props.currentUser) { this.props.history.push(\"/login\") } else {\n      service.get(`/users/${this.props.currentUser._id}`).then(response => {\n\n        this.setState({...response.data});\n      });  \n    }\n  }\n  validateEmail = (inputText) => {\n    var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n    if(inputText.match(mailformat))\n    {\n      return false;\n      } else {\n        return true;\n      }\n}\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (!this.state.level || this.state.level === \"none\") {\n      return \n    }\n    console.log(this.state)\n    editProfile({...this.state})\n    .then(response=>{\n      this.setState({...response, popUp: true})\n      this.props.updateUser(response)\n      setTimeout(() => {\n        this.setState({popUp:false})\n        this.props.history.push(\"/personalProfile\")\n      }, 2000);\n      console.log(response)\n     \n    })\n    .catch(error => console.log(error))\n  }\n  handleChange = (event) =>{\n    const {name,value} = event.target;\n    this.setState({[name]:value})\n  }\n  handleChangeUsefulLink = (event) =>{\n    const {name,value} = event.target;\n    const updatedLinks = {...this.state.usefulLinks,[name]:value}\n    this.setState({\n      usefulLinks:updatedLinks\n    });\n }\n  handleChangeMultiple = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleChangeFile = (e) =>{\n    const uploadData = new FormData();\n    uploadData.append('imageUrl', e.target.files[0]);\n    uploadFile(uploadData)\n      .then(response => {\n        // console.log(e)\n        console.log(response.secure_url)\n        if (e.target.name ==='cvUrl'){\n           this.setState({ cvUrl: response.secure_url});\n        } else {\n          this.setState({ avatar: response.secure_url});\n        }\n      })       \n      .catch(err => {\n        console.log('Error while uploading the file: ', err);\n      })\n  }\n  render(){\n    function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n    return(\n      <div className='form'>\n      {this.state.popUp && <OverlayUpdated/>}\n      <BlueTop/>\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-no-btn'>\n           <h1 className='text-blue'>EDIT YOUR PROFILE</h1>\n            <label>Name\n            <input type='text' name='name' value={this.state.name} onChange={(e)=>this.handleChange(e)}/>\n            <p className='text-red'>{ !this.state.name && this.state.errorMessage.empty} </p>\n            </label>\n            <label>Email\n            <input type='text' name='email' value={this.state.email} onChange={(e)=>this.handleChange(e)} /> \n             <p className='text-red'>{ !this.state.email && this.state.errorMessage} { this.validateEmail(this.state.email) && this.state.errorMessage.valid}</p>\n            </label>\n            <label>Birthday \n            <input type='date' name='birthday' value={formatDate(this.state.birthday)} onChange={(e)=>this.handleChange(e)}/>\n            </label>\n            <TextInput\n            label=\"Bio\"\n            name=\"bio\"\n            value={this.state.bio}\n            change={this.handleChange}\n            area={true}\n            rows={10}\n            cols={20}\n          />\n            <label>Avatar\n            <input type='file' name='avatar'  onChange={(e)=> this.handleChangeFile(e)} />\n            </label>\n            <label>CV\n            <input type='file' name='cvUrl'  onChange={(e)=> this.handleChangeFile(e)} />\n            </label>\n            <SelectInput\n            label=\"Exp Level\"\n            name=\"level\"  \n            value={this.state.level}\n            change={this.handleChange}\n            options={LevelOptions}\n            multiple={false}\n          /> \n          <p className='text-red'>{(this.state.level==='none' || !this.state.level) && this.state.errorMessage.level} </p>\n            <label>Job Title\n            <input type='text' name='title' value={this.state.title} onChange={(e)=>this.handleChange(e)} />\n            </label>\n            <SelectInput\n            label=\"Languages\"\n            name=\"codeLanguage\"\n            value={[...this.state.codeLanguage]}\n            change={this.handleChangeMultiple}\n            options={LanguageOptions}\n            multiple={true}\n          />\n           <TextInput\n            label=\"Fun Fact\"\n            name=\"funfact\"\n            value={this.state.funFact}\n            change={this.handleChange}\n            area={true}\n            rows={5}\n            cols={20}\n          />\n            {/* <label>Fun fact\n            <input type='text' name='funFact' value={this.state.funFact} onChange={(e)=>this.handleChange(e)} />\n            </label> */}\n            <label>LinkedIn\n            <input type='text' name='linkedin' value={this.state.usefulLinks.linkedin} onChange={(e)=>this.handleChangeUsefulLink(e)} />\n            </label>\n            <label>Github\n            <input type='text' name='github' value={this.state.usefulLinks.github} onChange={(e)=>this.handleChangeUsefulLink(e)} />\n            </label>\n            <label>Porfolio\n            <input type='text' name='portfolio' value={this.state.usefulLinks.portfolio} onChange={(e)=>this.handleChangeUsefulLink(e)} />\n            </label>\n          </div>\n            <button className='btn blue'>SAVE THE CHANGES</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default CandidateForm","import React from 'react'\n\nconst RedBottom = () =>  {\n  \n    return (\n      <div className=\"bg-redbottom\">\n        \n      </div>\n    )\n  \n}\n\nexport default RedBottom\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { getPostData} from './service';\nimport BlueTop from \"./backgrounds/BlueTop\";\nimport RedBottom from './backgrounds/RedBottom'\nclass ProfilePage extends React.Component {\n  state = {\n    currentPost:{}\n  }\n  getAge = (dateString) =>{\n    let today = new Date();\n    let birthDate = new Date(dateString);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    let m = today.getMonth() - birthDate.getMonth();\n    if (m<0 || (m===0 && (today.getDate() - birthDate.getDate())<0)){\n      age--;\n    }\n    return age\n  }\n  componentDidMount(){\n    getPostData(this.props.currentUser.currentPostId)\n    .then(response=>{\n      this.setState({currentPost:response})\n    })\n    .catch(err=>console.log(err))\n  }\n\n  render(){\n    if(this.props.currentUser.profileType==='candidate'){\n      return(\n        <div className='profile-page'>\n        <BlueTop/>\n        <RedBottom/>\n         <div className='top-line flex-row'>\n           <img src='' alt=''/>\n          <h1 className='text-yellow'>My Profile</h1>\n          <Link to='/swipeOffer/random'><img src='/images/icons/offer.png' alt='settings'/></Link>\n        </div>\n        <header>\n          <img src={this.props.currentUser.avatar} alt='avatar'/>\n          <h1>{this.props.currentUser.name} {this.props.currentUser.birthday && `, ${this.getAge(this.props.currentUser.birthday)}`}</h1>\n        </header>\n        <main>\n          <Link to='/personalProfile'>\n          <div className='row border-blue'>\n          <div className='image'>\n            <img src='/images/ninja-profile.png' alt='ninja-profile'/>\n          </div>\n          <div className='title'>\n           <p>My Profile</p>\n           </div>\n          </div>\n          </Link>\n  \n          <Link to='/levelspage'>\n          <div className='row border-yellow'>\n          <div className='image'>\n            <img src='/images/nunchaku.png' alt='my-level'/>\n          </div>\n          <div className='title'>\n            <p>My Level</p>\n          </div>\n            </div>\n          </Link>\n  \n          <Link to='/myapplications'>\n          <div className='row border-orange'>\n          <div className='image'>\n            <img src='/images/paper-roll.png' alt='applications'/>\n          </div>\n          <div className='title'>\n            <p>My Applications</p>\n          </div>\n            </div>\n          </Link>\n  \n          <Link to='/myBadges'>\n            <div className='row border-red'>\n            <div className='image my-badges'>\n              <img src='/images/my-badges.png' alt='badges'/>\n            </div>\n            <div className='title'>\n              <p>My Badges</p>\n            </div>\n            </div>\n          </Link>\n        </main>\n        </div>\n      )\n  } else {\n      return (\n        <div className='profile-page recruiter'>\n          <BlueTop/>\n          <RedBottom/>\n           <div className='top-line flex-row'>\n          <Link to='/swipeCandidate/random'><img src='/images/icons/people.png' alt='settings'/></Link>\n          <h1 className='text-yellow'>My Profile</h1>\n           <img src='' alt=''/>\n        </div>\n          <header>\n            <img src={this.props.currentUser.companyLogo || \"/images/temple.png\"} alt='avatar'/>\n            <h1>{this.props.currentUser.name}</h1>\n          </header>\n          <main>\n            <Link to='/companyDetails'>\n            <div className='row border-blue'>\n              <div className='image'>\n                <img src='/images/temple.png' alt='my-company'/>\n              </div>\n              <div className='title'>\n              <p>My Company</p>\n              </div>\n            </div>\n            </Link>\n    \n            <Link to='/myOffers'>\n            <div className='row border-yellow'>\n            <div className='image'>\n              <img src='/images/my-offers.png' alt='my-offers'/>\n            </div>\n            <div className='title'>\n              <p>My Offers</p>\n            </div>\n              </div>\n            </Link>\n    \n            <Link to='/myDashboard'>\n            <div className='row border-orange'>\n            <div className='image'>\n              <img src='/images/my-dashboard.png' alt='my-dashboard'/>\n            </div>\n                <div className='title'>\n              <p>My Dashboard</p>\n              </div>\n              </div>\n            </Link>\n    \n      \n              <div className='row border-red' onClick={()=>this.props.history.push(`/posts/${this.state.currentPost._id}`)} >\n                <div className='image'>\n                <img src='/images/my-current-post.png' alt='current-post'/>\n                </div>\n                   <div className='title'>\n                    <div className='flex-column'>\n                      <p>My Current Post</p>\n                      <span className='small-text'>{this.state.currentPost.offerName}</span>\n                    </div>\n                </div>\n              </div>\n          </main>\n        </div>\n      )\n    }  \n  }\n}\nexport default ProfilePage;","import React, { Component } from \"react\";\n\nclass OverlayWeapon extends Component {\n  state = {\n    chooseFilter: [],\n  };\n  filterDataSwipeParent = () => {\n    if (this.state.chooseFilter.length === 0) {\n      this.props.filter();\n      this.props.rememberOptions([]);\n    } else {\n      this.props.filter(this.state.chooseFilter);\n      this.props.rememberOptions(this.state.chooseFilter);\n    }\n  };\n  toggleFilter = (contract) => {\n    let copyChoose = [...this.state.chooseFilter];\n    if (this.state.chooseFilter.includes(contract)) {\n      copyChoose.splice(this.state.chooseFilter.indexOf(contract), 1);\n    } else {\n      copyChoose.push(contract);\n    }\n    this.setState({\n      chooseFilter: copyChoose\n    })\n  }\n  componentDidMount() {\n    this.setState({\n      chooseFilter: this.props.currentOptions\n    })\n  }\n  render() {\n    return (\n      <div className=\"overlay\">\n          <img onClick={this.filterDataSwipeParent} src=\"/images/icons/close_black.png\" alt=\"close ico\" />\n        <h1>CHOOSE YOUR WEAPON</h1>\n        <p>\n          the weapon you are looking for stands for the contract type for your next position. By\n          default, you can see all types of weapons. Choose the one(s) to your skills!\n          <br/>\n          <strong>Grey weapons are filters if no filter all job posts is selected</strong>\n        </p>\n        <div className=\"weapon-block\">\n          <div onClick={() => this.toggleFilter(\"Internship\")} className={`weapon ${this.state.chooseFilter.includes(\"Internship\") ? \"bg-grey\" : \"\"}`}>\n            <img src=\"/images/internship.png\" alt=\"ico weapon\" />\n            <p className=\"text-blue\">Internship</p>\n          </div>\n          <div onClick={() => this.toggleFilter(\"Freelance\")} className={`weapon ${this.state.chooseFilter.includes(\"Freelance\") ? \"bg-grey\" : \"\"}`}>\n            <img src=\"/images/freelance.png\" alt=\"ico weapon\" />\n            <p className=\"text-red\">Freelance</p>\n          </div>\n          <div onClick={() => this.toggleFilter(\"Permanent\")} className={`weapon ${this.state.chooseFilter.includes(\"Permanent\") ? \"bg-grey\" : \"\"}`}>\n            <img src=\"/images/permanent.png\" alt=\"ico weapon\" />\n            <p className=\"text-blue\">Permanent</p>\n          </div>\n          <div onClick={() => this.toggleFilter(\"Temporary\")} className={`weapon ${this.state.chooseFilter.includes(\"Temporary\") ? \"bg-grey\" : \"\"}`}>\n            <img src=\"/images/temporary.png\" alt=\"ico weapon\" />\n            <p className=\"text-red\">Temporary</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OverlayWeapon;\n","import React, { Component } from \"react\";\nconst level = {\n  Warrior: \"0-2 Years\",\n  Ninja: \"2-3 Years\",\n  Samurai: \"3-5 Years\",\n  Sensei: \"5+ years\",\n};\n\nclass InfoIco extends Component {\n  state = {\n    image: `/images/${this.props.type.toLowerCase()}.png`,\n    blueText: \"\",\n    redText: \"\",\n  };\n  setgoogState = () => {\n    if ([\"Warrior\", \"Ninja\", \"Samurai\", \"Sensei\"].includes(this.props.type)) {\n      this.setState({\n        blueText: level[this.props.type],\n        redText: \"Experience\",\n      });\n    }\n    if ([\"Internship\", \"Freelance\", \"Permanent\", \"Temporary\"].includes(this.props.type)) {\n      this.setState({\n        blueText: this.props.type,\n        redText: \"Contract\",\n      });\n    }\n  };\n  componentDidMount() {\n    this.setgoogState();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.type !== this.props.type) {\n      this.setgoogState();\n    }\n  }\n  render() {\n    return (\n      <div className=\"info-block\">\n        <img src={this.state.image} alt=\"ico info\" />\n        <p className=\"text-blue\">{this.state.blueText}</p>\n        <p className=\"text-red\">{this.state.redText}</p>\n      </div>\n    );\n  }\n}\n\nexport default InfoIco;\n","import React, { Component } from \"react\";\nimport OverlayWeapon from \"./overlays/OverlayWeapon\";\nimport service from \"./service\";\nimport InfoIco from \"./swipe/InfoIco\";\n// import useSwipeable from 'react-swipeable';\n\nclass SwipeJobPost extends Component {\n  state = {\n    optionsIsOpen: false,\n    currentOptions: [\"Internship\", \"Freelance\", \"Permanent\", \"Temporary\"],\n    offer: false,\n    errorMessage: \"\",\n    remember: [],\n  };\n  openFilter = (e) => {\n    this.setState({ optionsIsOpen: true });\n  };\n  setCurrentoptions = (arrOptionsSelected) => {\n    this.setState({\n      currentOptions: arrOptionsSelected,\n    });\n  };\n  searchRandom = (params = false) => {\n    let url = \"/posts/random\";\n    if (params) {\n      url = `${url}?filterContract=${params.join(\"_\")}`;\n    }\n    service\n      .get(url)\n      .then((resp) => {\n        console.log(resp);\n        if (resp.status === 204) {\n          this.setState({\n            offer: false,\n            optionsIsOpen: false,\n            errorMessage: resp.statusText,\n          });\n        } else {\n          this.setState({\n            offer: resp.data,\n            optionsIsOpen: false,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        // this.setState({ errorMessage: err })\n      });\n  };\n  newRandom = async () => {\n    return service\n      .get(\"/posts/random\")\n      .then((resp) => {\n        if (resp.status === 204) {\n          return false;\n        } else {\n          return resp.data;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return false;\n        // this.setState({ errorMessage: err })\n      });\n  };\n  componentDidMount() {\n    // if return from detail find post by id else random post\n    if (this.props.match.params.id) {\n      service\n        .get(`/posts/${this.props.match.params.id}`)\n        .then(async (resp) => {\n          this.setState({\n            offer: resp.data,\n            optionsIsOpen: false,\n          });\n        })\n        .catch((err) => console.log(err));\n    } else {\n      this.searchRandom();\n    }\n  }\n  detailPost = () => {\n    this.props.history.push(`/posts/${this.state.offer._id}/fromswipe`);\n  };\n\n  swipeOffer = async () => {\n    try {\n      let idOffer = this.state.offer._id;\n      let updatedUser = await service.patch(`/users/${idOffer}/swipeLeft`);\n      let copyRemember = [...this.state.remember, `S_${idOffer}`]; // stock id for reverse\n      this.props.updateUser(updatedUser.data.updatedUser);\n      let newRandom = await this.newRandom();\n      if (newRandom) {\n        this.setState({\n          offer: newRandom,\n          optionsIsOpen: false,\n          remember: copyRemember,\n        });\n      } else {\n        this.setState({\n          offer: false,\n          optionsIsOpen: false,\n          errorMessage: \"No more offer\",\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  chooseOffer = async () => {\n    try {\n      let idApp = this.state.offer.applicationId;\n      let copyRemember = [...this.state.remember, `C_${idApp}`]; // stock id for reverse\n      // update application with apply of candidate\n      console.log(this.state.offer)\n      await service.patch(`/applications/${this.state.offer.applicationId}/add`);\n      let newRandom = await this.newRandom();\n      if (newRandom) {\n        this.setState({\n          offer: newRandom,\n          optionsIsOpen: false,\n          remember: copyRemember,\n        });\n      } else {\n        this.setState({\n          offer: false,\n          optionsIsOpen: false,\n          errorMessage: \"No more offer\",\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  comeBack = async () => {\n    try {\n      \n    if (this.state.remember.length < 1) {\n      return;\n    } else {\n      let copyRemember = [...this.state.remember];\n      let beforeVal = copyRemember.pop().split(\"_\");\n      let action = beforeVal[0];\n      let oldId = beforeVal[1];\n      if (action === \"S\") {\n        // if last action is swipe update User to remove old choice\n        let copyCurrentUser = {...this.props.currentUser};\n        let copySwippedOffer = [...copyCurrentUser.swipedOfferId];\n        copySwippedOffer.splice(copySwippedOffer.indexOf(oldId), 1);\n        let updatedUser = await service.patch(\"/users\", {swipedOfferId: copySwippedOffer});\n        console.log(updatedUser)\n        let oldOffer = await service.get(`/posts/${oldId}`);\n        this.props.updateUser(updatedUser.data);\n        this.setState({\n          offer:oldOffer.data,\n          remember: copyRemember\n        })\n      }\n      if (action === \"C\") {\n        // if last action is apply update application to remove old choice\n        let oldApp = await service.patch(`/applications/${oldId}/remove`);\n        console.log(oldApp)\n        let oldOffer = await service.get(`/posts/${oldApp.data.application.jobPostId}`);\n        oldOffer.data.applicationId = oldId;\n        this.setState({\n          offer:oldOffer.data,\n          remember: copyRemember\n        })\n      }\n    }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  render() {\n    let compagnyLogo =\n      this.state.offer?.companyLogo ||\n      this.state.offer?.recruiterId?.companyLogo ||\n      \"/images/temple.png\";\n\n    return (\n      <div className=\"swipe\">\n        <div className=\"header-swipe\">\n          <img className=\"ico-swipe ico-profile\" onClick={()=>this.props.history.push('/profilepage')}src=\"/images/icons/profile.png\" alt=\"ico\" />\n          <img\n            className=\"ico-swipe ico-filter\"\n            src=\"/images/icons/filter.png\"\n            alt=\"ico\"\n            onClick={this.openFilter}\n          />\n          <img className=\"logo-header-swipe\" src=\"/images/ninja-logo.png\" alt=\"ico\" />\n          <img className=\"ico-swipe ico-chat\" src=\"/images/icons/chat.png\" alt=\"ico\" />\n        </div>\n        <div className=\"body-swipe\">\n          {(!this.state.offer && (\n            <h1>\n              {(this.state.errorMessage && (\n                <div className=\"text-red\">{this.state.errorMessage}</div>\n              )) ||\n                \"Loading...\"}\n            </h1>\n          )) || (\n            <div className=\"block-to-swipe\" onClick={this.detailPost}>\n              <img className=\"company-logo\" src={compagnyLogo} alt=\"logo\" />\n              <h1>{this.state.offer.position}</h1>\n              <div className=\"block-infoico\">\n                <InfoIco type={this.state.offer.experienceLevel} />\n                <InfoIco type={this.state.offer.contract} />\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"block-btn-swipe\">\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/reverse.png\"\n            alt=\"reverse ico\"\n            onClick={this.comeBack}\n          />\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/cancel.png\"\n            alt=\"cancel ico\"\n            onClick={this.swipeOffer}\n          />\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/heart.png\"\n            alt=\"heart ico\"\n            onClick={this.chooseOffer}\n          />\n          <img className=\"btn-swipe\" src=\"/images/icons/badge.png\" alt=\"badge\" />\n        </div>\n        {this.state.optionsIsOpen && (\n          <OverlayWeapon\n            filter={this.searchRandom}\n            rememberOptions={this.setCurrentoptions}\n            currentOptions={this.state.currentOptions}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SwipeJobPost;\n","import React, { Component } from \"react\";\nimport { dataPostToStatePost, editProfile } from \"../service\";\n\nclass PostDetails extends Component {\n  state = {\n    offerName: \"\",\n    companyLogo: \"\", // voir si default ou required\n    companyBio: \"\",\n    companyName: \"\",\n    description: \"\",\n    position: \"\",\n    contract: \"\",\n    experienceLevel: \"\",\n    codeLanguage: [], // voir si enum et ou vérification bonne donnée\n    //location: { city: { type: [String] }, country: { type: [String] } },\n    remote: false,\n    funFact: \"\",\n    website: \"\",\n    from: false,\n  };\n  componentDidMount() {\n    if (!this.props.currentUser) {\n      this.props.history.push(\"/\");\n    } else {\n      dataPostToStatePost(this.props.match.params.id)\n        .then(data => {\n\n          this.setState({\n            ...data,\n            from: this.props.from || false\n          });\n      }).catch(err => console.log(err))\n      \n    }\n  }\n  handleEdit = (e) => {\n    this.props.history.push(`/postForm/${this.props.match.params.id}`);\n  };\n  //update state.currentPostId if chosen\n  updateCurrentPost = () =>{\n    this.props.updateCurrentPost(this.props.match.params.id);\n    editProfile({currentPostId:this.props.match.params.id})\n    .then(response=>{\n      console.log('CHANGING POST ID', response)\n      this.props.updateUser(response)\n    })\n    .catch(err=>console.log(err))\n  }\n  back = () => {\n    if (this.props.from ==='swipe') {\n      this.props.history.push(`/swipeOffer/${this.props.match.params.id}`);\n    } else {\n      this.props.history.goBack()\n    }\n  }\n  render() {\n    return (\n      <div className=\" details flex--column\">\n        <div className=\"head-post-details flex-column bg-ligth-grey\">\n          <img\n            src={this.state.companyLogo ? this.state.companyLogo : \"/images/temple.png\"}\n            alt=\"logo comp\"\n          />\n          <h1>{this.state.offerName}</h1>\n          { this.props.currentUser.profileType==='recruiter' && (this.props.from || <button className=\"btn blue\" onClick={this.updateCurrentPost}>CHOOSE TO BE CURRENT POST</button>)}\n        </div>\n        <div className=\"body-post-details flex-column\">\n          <div className=\"detail flex-row\">\n            <div>\n              <h4>Sensority Level</h4>\n              <p>{this.state.experienceLevel}</p>\n            </div>\n            <img src={`/images/${this.state.experienceLevel.toLowerCase()}.png`} alt=\"logo level\" />\n          </div>\n          <div className=\"detail\">\n            <h4>Employement Type</h4>\n            <p>{this.state.contract}</p>\n          </div>\n          <div className=\"detail\">\n            <h4>Job Function</h4>\n            <p>{this.state.position}</p>\n          </div>\n          {this.state.codeLanguage.length > 0 && (\n            <div className=\"detail\">\n              <h4>Code Languages</h4>\n              <p>{this.state.codeLanguage.join(\", \")}</p>\n            </div>\n          )}\n          <div className=\"who\">\n            <h2>WHO ARE WE</h2>\n            <p>{this.state.companyBio}</p>\n          </div>\n          <div className=\"who\">\n            <h2>WHO DO WE NEED</h2>\n            <p>{this.state.description}</p>\n          </div>\n          {this.state.funFact && (\n            <div className=\"who\">\n              <h2>FUN FACT</h2>\n              <p>{this.state.funFact}</p>\n            </div>\n          )}\n          <div className=\"who\">\n            <h2>WEBSITE</h2>\n            <a href={this.state.website} rel=\"noreferrer\" target=\"_blank\">\n              {this.state.website}\n            </a>\n          </div>\n          {(this.props.currentUser.profileType==='recruiter' && ((this.props.from && <button className=\"btn red\" onClick={this.back}>GO BACK</button>) || <button className=\"btn red\" onClick={this.handleEdit}>EDIT THIS POST</button>) )||  <button className=\"btn red\" onClick={this.back}>GO BACK</button>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostDetails;\n","import React from 'react';\nimport {logout} from './service'\nclass Logout extends React.Component{\n\n  logout = () =>{\n    if(this.props.currentUser){\n      logout()\n    .then(()=>{\n      this.props.updateUser(null)\n      console.log('LOGGED OUT')\n      })\n    .catch(err=>console.log(err))\n    }\n  }\n  render(){\n    return <div onClick={this.logout}>Logout</div>\n  }\n}\nexport default Logout","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {editProfile} from './service';\nimport RedBottom from './backgrounds/RedBottom';\nimport BlueTop from './backgrounds/BlueTop'\n\nclass LevelPage extends React.Component{\n  state = {\n    level: this.props.currentUser?.level || \"\"\n  }\n  updateLevel = (str) =>{\n    this.setState({\n      level: str\n    })\n    editProfile({...this.state})\n    .then(response=>{\n      console.log('CHANGING LEVEL',response)\n      this.props.updateUser(response)\n    })\n    .catch(err=>console.log(err))\n  }\n  render(){\n    return (\n      <div className='my-level'>\n      <BlueTop/>\n      <RedBottom/>\n         <div className='top-line flex-row'> \n          <Link to='/profilepage'><img src='/images/icons/back.png' alt='settings'/></Link>\n          <h1 className='text-yellow'>My Level</h1>\n          <img src='' alt=''/>\n        </div>\n        <header>\n          <img src='/images/nunchaku.png'alt='levels'/>\n        </header>\n      <main>\n          <div onClick = {()=>this.updateLevel('Warrior')} className={`row-level border-blue ${this.props.currentUser?.level==='Warrior' ? 'yellow' : 'white'}`}>\n            <h3>Warrior</h3>\n            <div className='image'><img src='/images/warrior.png' alt='warrior'/></div>\n            <h3>0 - 2 yrs experience</h3>\n          </div>\n          <div onClick = {()=>this.updateLevel('Ninja')} className={`row-level border-yellow ${this.props.currentUser?.level==='Ninja' ? 'yellow' : 'white'}`}>\n            <h3>Ninja</h3>\n           <div className='image'> <img src='/images/ninja.png' alt='ninja'/> </div>\n            <h3>2 - 3 yrs experience</h3>\n          </div>\n          <div onClick = {()=>this.updateLevel('Samurai')} className={`row-level border-orange ${this.props.currentUser?.level==='Samurai' ? 'yellow' : 'white'}`}>\n            <h3>Samurai</h3>\n             <div className='image'><img src='/images/samurai.png' alt='samurai'/></div>\n            <h3>3 - 5 yrs experience</h3>\n          </div>\n          <div onClick = {()=>this.updateLevel('Sensei')} className={`row-level border-red ${this.props.currentUser?.level==='Sensei' ? 'yellow' : 'white'}`}>\n            <h3>Sensei</h3>\n             <div className='image'><img src='/images/sensei.png' alt='sensei'/></div>\n            <h3>5 yrs+ experience</h3>\n          </div>\n      </main>\n      </div>\n    )\n  }\n}\nexport default LevelPage ","import React, { Component } from \"react\";\nimport service from \"../service.js\";\nimport { Link } from \"react-router-dom\";\n\nclass CandidateDetails extends Component {\n  state = {\n    from: false,\n    apply: false,   \n  };\n  // componentDidUpdate(prevProps) {\n  //   if(prevProps.currentCandidate !== this.props.currentCandidate) {\n  //     this.setState({go:true});\n  //   }\n  // }\n  componentDidMount() {\n    if (!this.props.currentUser) {\n      this.props.history.push(\"/login\");\n    } else {\n      if (this.props.from) {\n        service\n          .get(`/users/${this.props.match.params.id}`)\n          .then(async (response) => {\n            let apply;\n            let application = await service.get(\n              `applications/${this.props.currentUser.currentApplicationId}`\n            );\n            this.props.updateCandidate(response.data)\n\n            console.log(application);\n            if (application.data.acceptedCandidateId.includes(this.props.match.params.id)) {\n              apply = \"ACCEPTED\";\n              this.props.history.push(\"/chatbox\")\n            } else if (application.data.refusedCandidateId.includes(this.props.match.params.id)) {\n              apply = \"REFUSED\";\n            } else {\n              apply = false;\n            }\n            // this.props.updateCandidate(response.data)\n            this.setState({\n              from: this.props.from || false,\n              apply: apply,\n            });\n          })\n          .catch((err) => console.log(err));\n      } else {\n        service\n          .get(`/users/${this.props.currentUser._id}`)\n          .then((response) => {\n            this.props.updateCandidate(response.data)\n            this.setState({\n              from: this.props.from || false,\n            });\n          })\n          .catch((err) => console.log(err));\n      }\n    }\n  }\n   getAge = (dateString) =>{\n    let today = new Date();\n    let birthDate = new Date(dateString);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    let m = today.getMonth() - birthDate.getMonth();\n    if (m<0 || (m===0 && (today.getDate() - birthDate.getDate())<0)){\n      age--;\n    }\n    return age\n  }\n  swipeCandidate = async () => {\n    try {\n      await service.patch(`/applications/${this.props.currentUser.currentApplicationId}/refuse`, {\n        id: this.props.currentCandidate?._id,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  chooseCandidate = async () => {\n    try {\n      await service.patch(`/applications/${this.props.currentUser.currentApplicationId}/accept`, {\n        id: this.props.currentCandidate._id,\n      });\n      this.props.history.push(`/chatbox/${this.props.currentUser._id}_${this.props.currentCandidate._id}_${this.props.currentUser.currentApplicationId}`)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  openChat = () => {\n\n  }\n  render() {\n    let age = this.state.birthday ? this.getAge(this.state.birthday) : false;\n\n    return (\n      <div className=\"bg-ligth-grey details\">\n        <div className=\"head-candidate-details\">\n        <img src='/images/icons/back-blue.png' className='icon-back-blue' onClick={()=>this.props.history.goBack()} alt=''/>\n          <div className=\"head-avatar-candidate flex-column\">\n            <img src={this.props.currentCandidate?.avatar} alt=\"avatar\" />\n            {/* <img src={this.state.avatar ? this.state.avatar : \"/images/ninja.png\"} alt=\"avatar\" /> */}\n            {this.props.currentUser && this.props.currentUser.profileType === \"recruiter\" && (\n              <div className=\"block-btn-swipe-detail flex-row\">\n                {(this.state.apply && <h2 className=\"text-red\">{this.state.apply}</h2>) || (\n                  <>\n                    <img\n                      className=\"btn-swipe\"\n                      src=\"/images/icons/cancel.png\"\n                      alt=\"cancel ico\"\n                      onClick={this.swipeCandidate}\n                    />\n                    <img\n                      className=\"btn-swipe\"\n                      src=\"/images/icons/heart.png\"\n                      alt=\"heart ico\"\n                      onClick={this.chooseCandidate}\n                    />\n                  </>\n                )}\n              </div>\n            )}\n            <h2>{this.props.currentCandidate?.title}</h2>\n          </div>\n          <div className=\"head-name-candidate flex-row\">\n            <h1>\n              {this.props.currentCandidate?.name} {age && `, ${age}`}\n            </h1>\n            <div className='circle'>\n            <img\n              src={`/images/${this.props.currentCandidate?.level?.toLowerCase()}.png`}\n              alt=\"level ico\"\n            />\n             {/* <img\n              src={`/images/${\n                this.props.currentCandidate?.level ? `${this.props.currentCandidate?.level.toLowerCase()}.png` : \"ninja.png\"\n              }`}\n              alt=\"level ico\"\n            /> */}\n            </div>\n          </div>\n        </div>\n        <div className=\"body-candidate-details\">\n          <div className=\"detail\">\n            <div>\n              <h4>CODE LANGUAGES</h4>\n              <p>{this.props.currentCandidate?.codeLanguage ? this.props.currentCandidate?.codeLanguage.join(\", \") : \"none\"}</p>\n            </div>\n          </div>\n          <div className=\"who\">\n            <h4>BIO</h4>\n            <p>{this.props.currentCandidate?.bio}</p>\n          </div>\n          {this.props.currentCandidate?.funFact && (\n            <div className=\"who\">\n              <h4>FUN FACT</h4>\n              <p>{this.props.currentCandidate?.funFact}</p>\n            </div>\n          )}\n          <div className=\"links-candidate flex-row \">\n            {this.props.currentCandidate?.usefulLinks && (\n              <>\n                <a href={this.props.currentCandidate?.usefulLinks.linkedin} rel=\"noreferrer\" target=\"_blank\">\n                  <img src={\"/images/icons/linkedin.png\"} alt=\"ico linkedin\" />\n                </a>\n                <a href={this.props.currentCandidate?.usefulLinks.github} rel=\"noreferrer\" target=\"_blank\">\n                  <img src={\"/images/icons/github.png\"} alt=\"ico github\" />\n                </a>\n              </>\n            )}\n            {this.props.currentCandidate?.cvUrl && (\n              <a href={this.props.currentCandidate?.cvUrl} rel=\"noreferrer\" target=\"_blank\">\n                <img src={\"/images/icons/cv.png\"} alt=\"ico cv\" />\n              </a>\n            )}\n          </div>\n          {/* <button className=\"btn red\" onClick={this.openChat}> HAVE A CHAT!</button> */}\n        </div>\n        {(this.props.from === \"swipe\" && (\n          <Link to={`/swipeCandidate/${this.props.match.params.id}`}>\n            <button className=\"btn red\">GO BACK</button>\n          </Link>\n        )) ||\n          (this.props.from === \"dashboard\" && (\n            \n            <button onClick={() => this.props.history.goBack()} className=\"btn red\">\n              GO BACK\n            </button>\n            \n          )) || (\n            <Link to=\"/editCandidateform\">\n              <button className=\"btn red\">Edit my info</button>\n            </Link>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default CandidateDetails;\n","import React, { Component } from \"react\";\n\nclass OverlayExperience extends Component {\n  state = {\n    chooseFilter: [],\n  };\n  filterDataSwipeParent = () => {\n    if (this.state.chooseFilter.length === 0) {\n      this.props.filter();\n      this.props.rememberOptions([]);\n    } else {\n      this.props.filter(this.state.chooseFilter);\n      this.props.rememberOptions(this.state.chooseFilter);\n    }\n  };\n  toggleFilter = (level) => {\n    let copyChoose = [...this.state.chooseFilter];\n    if (this.state.chooseFilter.includes(level)) {\n      copyChoose.splice(this.state.chooseFilter.indexOf(level), 1);\n    } else {\n      copyChoose.push(level);\n    }\n    this.setState({\n      chooseFilter: copyChoose\n    })\n  }\n  filterDataSwipeParent = () => {\n    if (this.state.chooseFilter.length === 0) {\n      this.props.filter();\n      this.props.rememberOptions([]);\n    } else {\n      this.props.filter(this.state.chooseFilter);\n      this.props.rememberOptions(this.state.chooseFilter);\n    }\n  };\n  toggleFilter = (level) => {\n    let copyChoose = [...this.state.chooseFilter];\n    if (this.state.chooseFilter.includes(level)) {\n      copyChoose.splice(this.state.chooseFilter.indexOf(level), 1);\n    } else {\n      copyChoose.push(level);\n    }\n    this.setState({\n      chooseFilter: copyChoose\n    })\n  }\n  componentDidMount() {\n    this.setState({\n      chooseFilter: this.props.currentOptions\n    })\n    \n  }\n  render() {\n    return (\n      <div className=\"overlay\">\n          <img onClick={this.filterDataSwipeParent} src=\"/images/icons/close_black.png\" alt=\"close ico\" />\n        <h1>CHOOSE THE NINJA TYPE</h1>\n        <p>\n          The ninja type stands for the experience level of the candidate you are looking for. By\n          default, you can see all types of ninjas. Choose the one(s) to find your ninja to hire!\n          <br/>\n          <strong>Grey weapons are filters if no filter all job posts is selected</strong>\n        </p>\n        <div className=\"level-block\">\n          <div onClick={() => this.toggleFilter(\"Warrior\")} className={`level ${this.state.chooseFilter.includes(\"Warrior\") ? \"bg-grey\" : \"\"}`}>\n            <img src=\"/images/warrior.png\" alt=\"ico level\" />\n            <p className=\"text-blue\">Warrior</p>\n          </div>\n          <div onClick={() => this.toggleFilter(\"Ninja\")} className={`level ${this.state.chooseFilter.includes(\"Ninja\") ? \"bg-grey\" : \"\"}`}>\n            <img src=\"/images/ninja.png\" alt=\"ico level\" />\n            <p className=\"text-red\">Ninja</p>\n          </div>\n          <div onClick={() => this.toggleFilter(\"Samurai\")} className={`level ${this.state.chooseFilter.includes(\"Samurai\") ? \"bg-grey\" : \"\"}`}>\n            <img src=\"/images/samurai.png\" alt=\"ico level\" />\n            <p className=\"text-blue\">Samurai</p>\n          </div>\n          <div onClick={() => this.toggleFilter(\"Sensei\")} className={`level ${this.state.chooseFilter.includes(\"Sensei\") ? \"bg-grey\" : \"\"}`}>\n            <img src=\"/images/sensei.png\" alt=\"ico level\" />\n            <p className=\"text-red\">Sensei</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OverlayExperience;\n","import React from \"react\";\nimport service from \"./service\";\nimport OverlayExperience from \"./overlays/OverlayExperience\";\nclass SwipeCandidateProfile extends React.Component {\n  state = {\n    optionsIsOpen: false,\n    currentOptions: [],\n    candidate: false,\n    errorMessage: \"\",\n    remember: [],\n  };\n  openFilter = (e) => {\n    this.setState({ optionsIsOpen: true });\n  };\n\n  searchRandom = (params = false) => {\n    let url = \"/users/random\";\n    if (params) {\n      url = `${url}?filterLevel=${params.join(\"_\")}`;\n    }\n    service\n      .get(url)\n      .then((resp) => {\n        console.log(resp);\n        if (resp.status === 204) {\n          this.setState({\n            candidate: false,\n            optionsIsOpen: false,\n            errorMessage: resp.statusText,\n          });\n        } else {\n          this.setState({\n            candidate: resp.data,\n            optionsIsOpen: false,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        // this.setState({ errorMessage: err })\n      });\n  };\n  setCurrentoptions = (arrOptionsSelected) => {\n    this.setState({\n      currentOptions: arrOptionsSelected,\n    });\n  };\n  detailPost = () => {\n    this.props.history.push(`/users/${this.state.candidate._id}/fromswipe`);\n  }\n  swipeCandidate = async () => {\n    try {\n    await service.patch(`/applications/${this.props.currentUser.currentApplicationId}/refuse`, {id: this.state.candidate._id})\n    let copyRemember = [...this.state.remember, `R_${this.state.candidate._id}`];\n    this.setState({\n      remember: copyRemember\n    })\n    this.searchRandom();\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n   chooseCandidate = async () => {\n    try {\n    await service.patch(`/applications/${this.props.currentUser.currentApplicationId}/accept`, {id: this.state.candidate._id})\n    let copyRemember = [...this.state.remember, `A_${this.state.candidate._id}`];\n    this.setState({\n      remember: copyRemember\n    })\n    this.searchRandom();\n\n    } catch (error) {\n      console.log(error)\n    }\n  };\n  componentDidMount = () => {\n    if(this.props.match.params.id){\n      service.get(`/users/${this.props.match.params.id}`)\n      .then(response=>{\n        this.setState({\n          candidate:response.data\n        })\n      })\n      .catch(err=>console.log(err))\n    } else {\n    this.searchRandom();\n    }\n  };\n  render() {\n    return (\n      <div className=\"swipeCandidate\">\n        <div className=\"swipe\">\n          <div className=\"header-swipe\">\n            <img\n              className=\"ico-swipe ico-profile\"\n              src=\"/images/icons/profile.png\"\n              onClick={()=>{this.props.history.push('/profilepage')}}\n              alt=\"ico\"\n            />\n            <img\n              className=\"ico-swipe ico-filter\"\n              src=\"/images/icons/filter.png\"\n              alt=\"ico\"\n              onClick={this.openFilter}\n            />\n            <img\n              className=\"logo-header-swipe\"\n              src=\"/images/ninja-logo.png\"\n              alt=\"ico\"\n            />\n            <img\n              className=\"ico-swipe ico-chat\"\n              src=\"/images/icons/chat.png\"\n              alt=\"ico\"\n            />\n          </div>\n          <div className=\"body-swipe\">\n            {(!this.state.candidate && \n             <h1>{(this.state.errorMessage && <div className=\"text-red\">{this.state.errorMessage}</div> )|| \"Loading...\"}</h1>) || (\n              <div className=\"block-to-swipe\" onClick={this.detailPost}>\n                <img\n                  className=\"avatar\"\n                  src={this.state.candidate.avatar}\n                  alt=\"avatar\"\n                />\n                <div className=\"block-footer\">\n                  <h1>{this.state.candidate.title}</h1>\n                  <div className=\"image-level\">\n                    <img\n                      src={\n                        this.state.candidate\n                          ? `/images/${this.state.candidate.level.toLowerCase()}.png`\n                          : `/images/ninja.png`\n                      }\n                      alt=\"level-icon\"\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n           <div className=\"block-btn-swipe\">\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/reverse.png\"\n            alt=\"reverse ico\"\n            onClick={this.comeBack}\n          />\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/cancel.png\"\n            alt=\"cancel ico\"\n            onClick={this.swipeCandidate}\n          />\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/heart.png\"\n            alt=\"heart ico\"\n            onClick={this.chooseCandidate}\n          />\n          <img className=\"btn-swipe\" src=\"/images/icons/badge.png\" alt=\"badge ico\" />\n        </div>\n        </div>\n          {/* <div className=\"block-btn-swipe\">\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/reverse.png\"\n            alt=\"reverse ico\"\n            onClick={this.comeBack}\n          />\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/cancel.png\"\n            alt=\"cancel ico\"\n            onClick={this.swipeCandidate}\n          />\n          <img\n            className=\"btn-swipe\"\n            src=\"/images/icons/heart.png\"\n            alt=\"heart ico\"\n            onClick={this.chooseCandidate}\n          />\n        </div> */}\n        {this.state.optionsIsOpen && (\n          <OverlayExperience\n            filter={this.searchRandom}\n            rememberOptions={this.setCurrentoptions}\n            currentOptions={this.state.currentOptions}\n          />\n        )}\n      </div>\n    );\n  }\n}\nexport default SwipeCandidateProfile;\n","import React from 'react';\nimport service from './service'\nclass MyOffersList extends React.Component{\n  state ={\n    offerList:[]\n  }\n  goToDetails = (postId) =>{\n    this.props.history.push(`/posts/${postId}`)\n  }\n\n  componentDidMount(){\n    if(this.props.currentUser){\n      service.get(`/posts/recruiter/${this.props.currentUser._id}`)\n      .then(response=>{\n        console.log(response.data)\n        this.setState({\n          offerList:response.data\n        })\n        console.log(this.state.offerList)\n      })\n      .catch(err=>console.log(err))\n    }  \n  }\n  render(){\n    return (\n      <div className=\"list\"> \n      <h1>MY OFFERS </h1>\n      <div>\n     {this.state.offerList.map((offer)=>{\n      return (this.props.currentPostId===offer._id && <div onClick={()=>this.goToDetails(offer._id)} style={{backgroundColor:'#F7E194'}} className=\"list element\" key={offer._id}> \n         <h2>{offer.offerName}</h2>\n        </div>) ||\n        (<div onClick={()=>this.goToDetails(offer._id)} style={{}} className=\"list element\" key={offer._id}>\n         <h2>{offer.offerName}</h2>\n        </div>)\n    })}\n    </div>\n    <button onClick={()=>this.props.history.push('/postform/new')} className='btn red'>POST A NEW OFFER</button>\n      </div>\n    )\n  }\n}\nexport default MyOffersList;","import React from \"react\";\nimport service from \"./service\";\nimport BlueTop from './backgrounds/BlueTop';\n// import BlueBottom from './backgrounds/BlueBottom'\nclass MyDashBoard extends React.Component {\n  state = {\n    offerList: [],\n  };\n  goToDetails = (postId) => {\n    this.props.history.push(`/mydashboard/${postId}`);\n  };\n  getDate = (dateFromDB) => {\n    let today = new Date();\n    let theDay = new Date(dateFromDB)\n    let difference = today.getTime() - theDay.getTime();\n    let differentInDays = Math.floor(difference / (1000 * 60 * 60 * 24));\n    return differentInDays;\n  };\n  \n  componentDidMount() {\n    if (this.props.currentUser) {\n      service\n        .get(`/posts/recruiter/${this.props.currentUser._id}`)\n        .then((response) => {\n          this.setState({\n            offerList: response.data,\n          });\n        })\n        .catch((err) => console.log(err));\n    } else {\n      this.props.history.push('/')\n    }\n  }\n  render() {\n    return (\n      <div>\n        <BlueTop/>\n        {/* <BlueBottom/> */}\n        <div className='top-line flex-row'> \n          <img onClick={()=>{this.props.history.push('/profilepage')}} src='/images/icons/back.png' alt='icon back'/>\n          <h1 className='text-yellow'>My Dashboard </h1>\n          <img src='' alt=''/>\n        </div>\n        <div className=\"dashboard\">\n          {this.state.offerList.map((offer) => {\n            let dateNumber = this.getDate(offer.createdAt)\n            return (\n              (this.props.currentPostId === offer._id && (\n                <div\n                  onClick={() => this.goToDetails(offer._id)}\n                  style={{ backgroundColor: \"#F7E194\" }}\n                  className=\"element\"\n                  key={offer._id}\n                >\n                  <h2>{offer.offerName}</h2>\n                  <p>\n                    {dateNumber > 1 ? `${dateNumber} days ago` :\n                      \"today\"}\n                  </p>\n                  <p>{offer.applicationId.candidateId.length} applicants</p>\n                </div>\n              )) || (\n                <div\n                  onClick={() => this.goToDetails(offer._id)}\n                  className=\"element\"\n                  key={offer._id}\n                >\n                  <h2>{offer.offerName}</h2>\n                  <p>\n                    {dateNumber > 1 ? `${dateNumber} days ago` :\n                      \"today\"}\n                  </p>\n                  <p>{offer.applicationId.candidateId.length} applicants</p>\n                </div>\n              )\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default MyDashBoard;\n","import React from \"react\";\nimport service from \"./service\";\n\n\nclass DashboardDetails extends React.Component {\n  state = {\n    jobPost: \"\",\n    candidateList: [],\n    query: \"\",\n    jobCodeLanguages:[],\n    sortingLevel:false,\n    sortingAccuracy:false,\n  };\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = (event) => {\n    //search by codeLanguage in this.state.candidateList\n    event.preventDefault();\n  };\n  sortByLevel = () =>{\n    let ranking = { \n      Warrior: 1,\n      Ninja: 2,\n      Samurai: 3,\n      Sensei: 4\n    }\n    //sort levels by using value of each level in decreasing order\n    let sortedList = [...this.state.candidateList].sort((a,b)=> ranking[`${b.level}`] - ranking[`${a.level}`])\n    if (this.state.sortingLevel===false){\n       this.setState({ \n        candidateList:sortedList,\n        sortingLevel:true,\n        sortingAccuracy:false,\n      })\n      //if the button is not active then retrieve the page again to have original order\n    } else {\n      this.getSinglePost();\n       this.setState({ \n        sortingLevel:false,\n      })\n    }\n  }\n  sortByAccuracy = () => {\n    //sort by number of keywords matched in CodeLanguage \n    //codeLanguage=['JS','Python',...]\n    let jobCodeLanguages = [...this.state.jobCodeLanguages]\n    function matchCount(candidateCodeLanguagesArray){\n      let matchedArray = jobCodeLanguages.filter(el=> candidateCodeLanguagesArray.includes(el))\n      return matchedArray.length\n    }\n    let theList = [...this.state.candidateList]\n    let sortedList = theList.sort((a,b)=> matchCount(b.codeLanguage)-matchCount(a.codeLanguage))\n    if (this.state.sortingAccuracy===false){\n      this.setState({\n        sortingAccuracy:true,\n        sortingLevel:false,\n        candidateList:sortedList,\n      }) \n    } else {\n      this.getSinglePost();\n      this.setState({ \n        sortingAccuracy:false,\n      })\n    }\n  }\n  getSinglePost = async () => {\n    try {\n    let jobPost = await service.get(`/posts/${this.props.match.params.id}`);\n    let candidatesData = await service.get(\n      `/applications/${jobPost.data.applicationId._id}/candidates`\n    );\n    this.setState({\n      jobPost: jobPost.data.offerName,\n      candidateList: candidatesData.data.candidateId,\n      jobCodeLanguages:jobPost.data.codeLanguage\n    });\n      \n    } catch (error) {\n      console.log(error)\n    }\n  };\n  componentDidMount() {\n    if (!this.props.currentUser) {\n      this.props.history.push(\"/\");\n    } else {\n      this.getSinglePost();\n    }\n  }\n  render() {\n    let candidateArray;\n    if (this.state.query!==''){\n      candidateArray = this.state.candidateList\n          .filter((el) => {\n            return el.codeLanguage.some((el) => el.toLowerCase().startsWith(this.state.query.toLowerCase()))\n          })\n    } else {\n      candidateArray = this.state.candidateList\n    }\n    //CSS pushed button\n    let divStyle1,divStyle2;\n    let buttonOn = {backgroundColor:\"#F6DA79\", boxShadow: \"0px 2px 2px\"}\n    if(this.state.sortingAccuracy) {\n      divStyle1 = buttonOn;\n      divStyle2 = {}\n    } else if (this.state.sortingLevel) {\n      divStyle2 = buttonOn;\n      divStyle1 = {};\n    } else {\n      divStyle1 = {};\n      divStyle2 = {}\n    }\n    return (\n      <div className=\"dashboard-details\">\n        <div className='top-line flex-row blue-bg'>\n          <img\n            onClick={() => {\n              this.props.history.push(\"/mydashboard\");\n            }}\n            src=\"/images/icons/back.png\"\n            alt=\"back\"\n          />\n          <h1 className=\"text-yellow\">{this.state.jobPost}</h1>\n          <img src='' alt=''/>\n        </div>\n        <div className=\"sort flex-row\">\n          <h4 className=\"text-red\">Sort by</h4>\n          <img src=\"/images/icons/sort.png\" alt=\"sort\" />\n          <button onClick={()=>this.sortByAccuracy()}className=\"btn sort\" style={divStyle1}>accuracy</button>\n          <button onClick={()=>this.sortByLevel()} style={divStyle2} className=\"btn sort\">exp level</button>\n        </div>\n        <form onSubmit={this.handleSubmit} className=\"search\">\n          <label>Code Languages </label>\n          <div className='input-search flex-row'>\n          <input\n            onChange={this.handleChange}\n            name=\"query\"\n            value={this.state.query}\n          />\n            <img\n              className=\"icon-search\"\n              src=\"/images/icons/search.png\"\n              alt=\"search\"\n            />\n            </div>\n        </form>\n        <ul className=\"candidate-list\">\n          {candidateArray.map((el) => {\n              return (\n                <li\n                  onClick={() =>\n                    this.props.history.push(`/users/${el._id}/fromdashboard`)\n                  }\n                  key={el._id}\n                >\n                  {el.avatar ? (\n                    <img\n                      className=\"inline-avatar\"\n                      src={el.avatar}\n                      alt=\"avatar\"\n                    />\n                  ) : (\n                    <img\n                      className=\"inline-avatar\"\n                      src=\"/images/ninja-profile.png\"\n                      alt=\"avatar\"\n                    />\n                  )}\n                  <p>{el.name}</p>\n                  {/* <p>{el.codeLanguage}</p> */}\n                  <img\n                    className=\"inline-level\"\n                    src={`/images/${el?.level?.toLowerCase()}.png`}\n                    alt=\"level\"\n                  />\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default DashboardDetails;\n","import React from 'react';\n\nclass CompanyDetails extends React.Component{\n  state = {\n    currentUser : this.props.currentUser\n  }\n  goToEdit = () =>{\n    this.props.history.push('/recruiterform')\n  }\n  render(){\n    return (\n      <div className='company-details'>\n        <div className='company-details-head'>\n          <img src={this.state.currentUser.companyLogo? this.state.currentUser.companyLogo:'/images/temple.png' } alt='company-logo'/>\n          <h1>MY COMPANY</h1>\n          </div>\n          <div className='company-details-main'>\n           <div className='line'>\n              <p className='title'>Name: </p>\n              <p className='content'>{this.state.currentUser.name}</p> \n            </div>\n             <div className='line'>\n              <p className='title'>Email: </p>\n              <p className='content'>{this.state.currentUser.email}</p> \n            </div>\n            <div className='line'>\n              <p className='title'>Company Name: </p>\n              <p className='content'>{this.state.currentUser.companyName}</p> \n            </div>\n             <div className='line'>\n              <p className='title'>Industry: </p>\n              <p className='content'>{this.state.currentUser.industry}</p> \n            </div>\n             <div className='line'>\n              <p className='title'>Bio: </p>\n              <p className='content'>{this.state.currentUser.bio}</p> \n            </div>\n             <div className='line'>\n              <p className='title'>Website: </p>\n              <p className='content'>{this.state.currentUser.companyWebsite}</p> \n            </div>\n             {/* <div className='line'>\n              <p className='title'>Scope: </p>\n              <p className='content'>{this.state.currentUser.scope?.city || \"\"}, {this.state.currentUser.scope?.country || \"\"} </p> \n            </div> */}\n            <div className='line'>\n              <p className='title'>Fun Fact: </p>\n              <p className='content'>{this.state.currentUser.funFact}</p> \n            </div>\n        </div>\n        <button className='btn red' onClick={this.goToEdit}>UPDATE MY INFO</button>\n      </div>\n    )\n  }\n}\nexport default CompanyDetails;\n","import React from 'react'\n\nfunction Rating(props){\n    let rating = Math.round(props.children)\n    let stars='';\n    let star = '✩'\n    let starFilled = '★'\n    for (let i=0;i<rating;i++){\n        stars+=starFilled;\n    }\n    for (let i=0;i<(5-rating);i++){\n        stars+=star\n    }\n\n    return (\n        <div className='rating'>\n            {stars}\n        </div>\n    )\n}\nexport default Rating;","import React from 'react';\nimport BlueTop from './backgrounds/BlueTop'\nimport Rating from './Rating'\nclass MyBadges extends React.Component{\n  render(){\n    if (this.props.currentUser.profileType==='candidate'){\n      return (\n      <div>\n       <BlueTop/>\n          <div className='top-line flex-row'> \n            <img onClick={()=>{this.props.history.push('/profilepage')}} src='/images/icons/back.png' alt='icon back'/>\n            <h1 className='text-yellow'>My Badges </h1>\n            <img src='' alt=''/>\n          </div>\n      <div className='my-badges'>\n        <section>\n          <div className='element'>\n            <img src='/images/motivation.png' alt='motiv'/>\n            <p>Motivation</p>\n          </div>\n          <Rating>{this.props.currentUser.motivation}</Rating>\n        </section>\n        <section>\n         <div className='element'>\n           <img src='/images/humour.png' alt='humour'/>\n          <p>Humour</p>\n        </div>\n         <Rating>{this.props.currentUser.humour}</Rating>\n        </section>\n        <section>\n         <div className='element'>\n           <img src='/images/skills.png' alt='skills'/>\n          <p>Skills</p>\n        </div>\n         <Rating>{this.props.currentUser.skills}</Rating>\n        </section>\n        <section>\n         <div className='element'>\n           <img src='/images/culture.png' alt='culture'/>\n          <p>Culture</p>\n        </div>\n         <Rating>{this.props.currentUser.culture}</Rating>\n        </section>\n      </div>\n      </div>\n    )} else {\n       return (\n      <div>\n       <BlueTop/>\n          <div className='top-line flex-row'> \n            <img onClick={()=>{this.props.history.push('/profilepage')}} src='/images/icons/back.png' alt='icon back'/>\n            <h1 className='text-yellow'>Give Badges </h1>\n            <img src='' alt=''/>\n          </div>\n      <div className='my-badges'>\n        <section>\n          <div className='element'>\n            <img src='/images/motivation.png' alt='motiv'/>\n            <p>Motivation</p>\n          </div>\n          <form onSubmit={this.handleSubmit}>\n          <label id='rating-line'> \n          </label>\n            <div className=\"rating\">\n                <input id=\"star5\" name=\"star\" type=\"radio\" value=\"5\" className=\"radio-btn hide\" />\n                <label for=\"star5\">☆</label>\n                <input id=\"star4\" name=\"star\" type=\"radio\" value=\"4\" className=\"radio-btn hide\" />\n                <label for=\"star4\">☆</label>\n                <input id=\"star3\" name=\"star\" type=\"radio\" value=\"3\" className=\"radio-btn hide\" />\n                <label for=\"star3\">☆</label>\n                <input id=\"star2\" name=\"star\" type=\"radio\" value=\"2\" className=\"radio-btn hide\" />\n                <label for=\"star2\">☆</label>\n                <input id=\"star1\" name=\"star\" type=\"radio\" value=\"1\" className=\"radio-btn hide\" />\n                <label for=\"star1\">☆</label>\n                <div class=\"clear\"></div>\n            </div>\n            </form>\n        </section>\n        <section>\n         <div className='element'>\n           <img src='/images/humour.png' alt='humour'/>\n          <p>Humour</p>\n        </div>\n         <Rating>{this.props.currentUser.humour}</Rating>\n        </section>\n        <section>\n         <div className='element'>\n           <img src='/images/skills.png' alt='skills'/>\n          <p>Skills</p>\n        </div>\n         <Rating>{this.props.currentUser.skills}</Rating>\n        </section>\n        <section>\n         <div className='element'>\n           <img src='/images/culture.png' alt='culture'/>\n          <p>Culture</p>\n        </div>\n         <Rating>{this.props.currentUser.culture}</Rating>\n        </section>\n      </div>\n      </div>)\n    }\n  }\n}\nexport default MyBadges;","import React from 'react';\nimport {Link} from 'react-router-dom';\nconst OverlayOptions = () => {\n  return (\n    <div className='overlay options'>\n    <h1>OPTIONS</h1>\n    <Link to='/myBadges'><button className='btn blue'>GIVE A BADGE</button></Link>\n    <button className='btn red'>REPORT</button>\n    <button className='btn yellow'>DELETE THIS MATCH</button>\n    <p>Cancel</p>\n    </div>\n  )\n}\nexport default OverlayOptions;","import React from 'react';\nimport service from './service';\nimport BlueTop from './backgrounds/BlueTop';\nimport RedBottom from './backgrounds/RedBottom'\nclass MyApplications extends React.Component{\n  state ={\n    applicationList:[]\n  }\n  goToDetails = (postId) =>{\n    this.props.history.push(`/posts/${postId}`)\n  }\n\n  componentDidMount(){\n    if(this.props.currentUser){\n      service.get(`/applications/byCandidateId`)\n      .then(response=>{\n        this.setState({\n          applicationList:response.data.arrCandidating\n        })\n        console.log(this.state.applicationList)\n      })\n      .catch(err=>console.log(err))\n    }  \n  }\n  render(){\n    return (\n      <div className=\"list\"> \n      <BlueTop/>\n      <RedBottom/>\n        <div className='top-line flex-row'> \n          <img onClick={()=>this.props.history.goBack()} src='/images/icons/back.png' alt='settings'/>\n          <h1 className='text-yellow'>My Applications</h1>\n          <img src='' alt=''/>\n        </div>\n      <div>\n     {this.state.applicationList.map((offer)=>{\n      return (this.props.currentPostId===offer._id && <div onClick={()=>this.goToDetails(offer._id)} style={{backgroundColor:'#F7E194'}} className=\"list element\" key={offer._id}> \n         <h2>{offer.offerName}</h2>\n        </div>) ||\n        (<div onClick={()=>this.goToDetails(offer._id)} style={{}} className=\"list element\" key={offer._id}>\n         <h2>{offer.offerName}</h2>\n        </div>)\n    })}\n    </div>\n      </div>\n    )\n  }\n}\nexport default MyApplications;","import React from \"react\";\nimport service from \"./service\";\nimport { io } from \"socket.io-client\";\n\nclass Chat extends React.Component {\n  state = {\n    roomId: \"\",\n    message: \"\",\n    messages: [],\n    recruiterId: \"\",\n    candidateId: \"\",\n    err: \"\",\n  };\n\n  socket = io(\"http://localhost:5000\", { withCredentials: true, autoConnect: false });\n\n  async componentDidMount() {\n    const roomId = this.props.match.params.id;\n    // let prefix_message = (this.props.currentUser.profileType === \"recruiter\" )? \"R_\" : \"C_\";\n    // fetch data users\n    // console.log(prefix_message)\n    let arrIds = roomId.split(\"_\"); /// \"<recruiterId>_<candidateId>_<application>\"\n    try {\n      let recruiter, candidate;\n\n      candidate = await service.get(`/users/${arrIds[1]}`);\n      recruiter = await service.get(`/users/${arrIds[0]}`);\n\n      this.props.updateCandidate(candidate.data);\n\n      this.props.updateRecruiter(recruiter.data);\n\n      let room;\n      let messages = await service.get(`/rooms/${roomId}`);\n\n      if (!messages.data) {\n        room = await service.post(`/rooms`, { roomId: roomId });\n        messages = room.data.messages;\n      } else {\n        messages = messages.data.messages;\n      }\n      console.log(messages);\n      this.setState({\n        roomId: roomId,\n        recruiterId: arrIds[0],\n        candidateId: arrIds[1],\n        messages: messages,\n      });\n      /// SOCKET\n      this.socket.connect();\n      this.socket.emit(\"join-room\", room);\n      this.socket.on(\"receiveMessageFromOther\", async (message) => {\n        let newMessages = [...this.state.messages, message];\n        let newRoom = await service.patch(`/rooms/${this.state.roomId}`, { messages: newMessages });\n        this.setState({ messages: [...newRoom.data.messages] });\n      });\n    } catch (err) {\n      console.log(err, \"plop\");\n    }\n    //////////////////////////\n  }\n\n  componentWillUnmount() {\n    // this.socket.on(\"disconnet\",() => {service.patch(`/rooms/${this.state.roomId}`, {messages: this.state.messages})});\n    this.socket.disconnect();\n    this.props.updateRecruiter({});\n    this.props.updateCandidate({});\n  }\n  sendMyMessage = async (e) => {\n    let prefix_message = (this.props.currentUser.profileType === \"recruiter\" )? \"R_\" : \"C_\";\n    this.socket.emit(\"sendMessage\", `${prefix_message}${this.state.message}`);\n  };\n  render() {\n    return (\n      <>\n        <div className=\"message-box flex-column\">\n          <label>\n            Write Message:\n            <input\n              nametype=\"text\"\n              value={this.state.message}\n              onChange={(e) => {\n                this.setState({ message: e.target.value });\n              }}\n            />\n          </label>\n          <button\n            className=\"btn blue\"\n            onClick={(e) => {\n              this.sendMyMessage(e);\n            }}\n          >\n            SEND:\n          </button>\n        </div>\n        {this.state.err}\n        {this.state.messages &&\n          this.state.messages.map((mess, idx) => {\n            let arrMess = mess.split(\"_\");\n            let avatar, name;\n            if(arrMess[0] === \"R\") {\n              avatar= this.props.currentRecruiter.avatar ;\n              name= this.props.currentRecruiter.name ;\n            } else if (arrMess[0] === \"C\") {\n              avatar= this.props.currentCandidate.avatar ;\n              name= this.props.currentCandidate.name ;\n            } else {\n              avatar = false;\n              name = false;\n            }\n            return (\n              <div className=\"flex-row block-mess\" key={idx}>\n              <div className=\"id-chat bg-ligth-grey\">\n                {avatar && <img src={avatar} alt=\"avatar\" />}\n                {name && <p>{name} </p>}\n                </div>\n                <h4>{arrMess[1] || mess}</h4>\n              </div>\n            );\n          })}\n      </>\n    );\n  }\n}\n\nexport default Chat;\n","import React from 'react'\nimport './App.css';\nimport Homepage from './components/Homepage';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport PostForm from './components/forms/PostForm';\nimport RecruiterForm from \"./components/forms/RecruiterForm\";\nimport {Switch, Route} from 'react-router-dom';\nimport CandidateForm from './components/forms/CandidateForm'\nimport {loggedIn, editProfile} from './components/service';\nimport ProfilePage from './components/ProfilePage'\n// import NavBar from './components/NavBar';\n// import BlueTop from \"./components/backgrounds/blueTop\";\nimport SwipeJobPost from './components/SwipeJobPost';\nimport PostDetails from './components/details/PostDetails';\nimport Logout from './components/Logout';\nimport LevelPage from './components/LevelPage';\nimport CandidateDetails from \"./components/details/CandidateDetails\"\nimport SwipeCandidateProfile from './components/SwipeCandidateProfile'\nimport MyOffersList from './components/MyOffersList'\nimport MyDashBoard from './components/MyDashboard';\nimport DashboardDetails from './components/DashboardDetails';\nimport CompanyDetails from './components/details/CompanyDetails';\nimport MyBadges from './components/MyBadges';\nimport OverlayOptions from './components/overlays/OverlayOptions';\nimport MyApplications from './components/MyApplications'\nimport OverlayUpdated from './components/overlays/OverlayUpdated'\nimport Chat from './components/Chat';\n\nclass App extends React.Component {\n  state = {\n    loggedInUser: null,\n    currentPostId: null,\n    candidate: null,\n    recruiter: null,\n  }\n\n fetchUser() {\n    if (this.state.loggedInUser === null || this.state.loggedInUser === false){\n      loggedIn()\n        .then(response => {\n          this.setState({loggedInUser: response})\n        })\n        .catch(err => {\n          this.setState({loggedInUser: false}) \n        })\n    } \n }\n  updateCurrentPostId = (id) => {\n    this.setState({ currentPostId: id });\n  }\n  updateCandidate = (objCandidate) =>  {\n    this.setState({candidate: objCandidate})\n  }\n   updateRecruiter = (objRecruiter) =>  {\n    this.setState({recruiter: objRecruiter})\n  }\n  componentDidMount() {\n    this.fetchUser()\n  }\n  componentDidUpdate(prevProps, prevState){\n    // console.log(this.state.currentUser)\n    if(prevProps.currentUser !== this.props.currentUser && (this.props.currentUser!==null)){\n      editProfile({currentPostId:this.state.currentPostId})\n      .then(response=>{\n        this.setState({currentPostId:this.state.currentPostId})\n        console.log(response)\n      })\n      .catch(err=>console.log(err))\n    }\n    // if(prevState.candidate !== this.state.candidate ){\n    //   this.\n    //   .then(response=>{\n    //     this.setState({currentPostId:this.state.currentPostId})\n    //     console.log(response)\n    //   })\n    //   .catch(err=>console.log(err))\n    // }\n   \n  }\n  updateLoggedInUser = (userObj) =>{\n    this.setState({loggedInUser:userObj})\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={Homepage}/>\n          <Route path='/login'  render={(props)=><Login {...props} currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser}/>}/>\n          <Route path='/signup' render={(props)=><Signup {...props} currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser}/>} />\n          <Route path='/editCandidateform' render={(props)=><CandidateForm {...props} currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser}/>} />\n          <Route path='/profilepage' render={(props)=><ProfilePage  {...props} currentUser={this.state.loggedInUser} currentPostId={this.state.currentPostId}/>} />\n          <Route path='/postform/:id' render={(props) => <PostForm {...props} updateUser={this.updateLoggedInUser} updateCurrentPost={this.updateCurrentPostId}/>}/> \n          <Route path='/posts/:id/fromswipe' render={(props) => <PostDetails {...props} currentUser={this.state.loggedInUser} fromswipe={true} />} />\n          <Route path='/posts/:id' render={(props) => <PostDetails {...props} currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser} updateCurrentPost={this.updateCurrentPostId} />} />\n          <Route path='/recruiterform' render={(props) => <RecruiterForm {...props} currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser} />} />\n          <Route path='/swipeOffer/random' render={(props)=><SwipeJobPost currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser} {...props}/>} />\n          <Route path='/swipeOffer/:id' render={(props)=><SwipeJobPost currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser} {...props}/>} />\n          <Route path='/logout' render={()=><Logout currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser}/>} />\n          <Route path='/levelspage' render={()=><LevelPage currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser}/>} />\n          <Route path='/chatbox/:id' render={(props) => <Chat {...props} currentUser={this.state.loggedInUser} updateUser={this.updateLoggedInUser} currentCandidate={this.state.candidate} updateCandidate={this.updateCandidate} currentRecruiter={this.state.recruiter} updateRecruiter={this.updateRecruiter}/>}/>\n          <Route path='/swipeCandidate/random' render={(props)=><SwipeCandidateProfile  {...props} currentUser={this.state.loggedInUser}/>} />\n          <Route path='/swipeCandidate/:id' render={(props)=><SwipeCandidateProfile {...props} currentUser={this.state.loggedInUser}/>} />\n          <Route path='/users/:id/fromswipe' render={(props)=><CandidateDetails {...props} currentUser={this.state.loggedInUser} from={\"swipe\"} currentCandidate={this.state.candidate} updateCandidate={this.updateCandidate}/>} />\n          <Route path='/users/:id/fromdashboard' render={(props)=><CandidateDetails {...props} currentUser={this.state.loggedInUser} from={\"dashboard\"}/>} />\n          <Route path='/personalProfile' render={(props)=><CandidateDetails {...props} currentUser={this.state.loggedInUser} />} />\n          <Route path='/myoffers' render={(props)=><MyOffersList {...props} currentPostId={this.state.currentPostId} currentUser={this.state.loggedInUser}/>} />\n          <Route exact path='/mydashboard' render={(props)=><MyDashBoard {...props} currentPostId={this.state.currentPostId} currentUser={this.state.loggedInUser}/>} />\n          <Route path='/mydashboard/:id' render={(props)=><DashboardDetails currentUser={this.state.loggedInUser} {...props} />} />\n          <Route path='/companyDetails' render={(props)=><CompanyDetails currentUser={this.state.loggedInUser} {...props} />} />\n          <Route path='/myBadges' render={(props)=><MyBadges currentUser={this.state.loggedInUser} {...props} />} />\n          <Route path='/options' render={(props)=><OverlayOptions currentUser={this.state.loggedInUser} {...props} />} />\n          <Route path='/myapplications' render={(props)=><MyApplications currentUser={this.state.loggedInUser} {...props} />} />\n          <Route path='/overlayupdated' render={(props)=><OverlayUpdated {...props} />} />\n        </Switch>\n      </div> \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}